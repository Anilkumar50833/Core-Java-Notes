2)implicit class import
------------------------
This type of import statement is not recommanded to use because it will reduce the readability of our code.

ex:1
-----
import java.util.*;
class  Test
{
	public static void main(String[] args)
	{
		Date d=new Date();
		System.out.println(d); 
	}
}

ex:2
-----
import java.time.*;
class  Test
{
	public static void main(String[] args)
	{
		LocalDate date=LocalDate.now();
		System.out.println(date);

		LocalTime time=LocalTime.now();
		System.out.println(time);
	}
}

3) static import
------------------
Using static import we can access static members directly.

Often use of static import makes our program complex and unreadable.

ex:1
-----
import static java.lang.System.*;
class  Test
{
	public static void main(String[] args)
	{
		out.println("stmt1");
		out.println("stmt2");
		out.println("stmt3");	
	}
}

ex:2
-----
import static java.lang.System.*;
class  Test
{
	public static void main(String[] args)
	{
		out.println("stmt1");
		exit(0);
		out.println("stmt2");		
	}
}

Note:
-----
We can write explicit and implict class import in a java program but first priority goes to explicit class import.

ex:
import java.util.Date;
import java.util.*;
class  Test
{
	public static void main(String[] args)
	{
		Date d=new Date();
		System.out.println(d);		
	}
}


Java Methods
-----------
Methods are designed to write business logic.

Using methods we can achieve reusability for our business logic.

It is always recommanded to write business logic inside the methods.

ex:1
---
class  Test
{
	public static void main(String[] args)
	{
		sum();
		sum();
		sum();				
	}
	//static method
	public static void sum()
	{
		int a=10,b=20;
		int c=a+b;
		System.out.println(c); 
	}
}

ex:2
-----
class  Test
{
	public static void main(String[] args)
	{
		Test t=new Test();
		t.sum();
		t.sum();
		t.sum();				
	}
	//non-static method
	public void sum()
	{
		int a=10,b=20;
		int c=a+b;
		System.out.println(c); 
	}
}


































